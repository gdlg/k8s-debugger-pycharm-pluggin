
buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.30'
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.jetbrains.intellij' version '1.3.0'
    id 'java'
}

apply plugin: "kotlin"

group 'info.hochet'
version '0.1-EXPERIMENTAL'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'io.fabric8:kubernetes-client:5.11.1'
    runtimeOnly 'io.fabric8:kubernetes-client:5.11.1'
}

configurations.all {
    // Exclude slf4j dependency of the Kubernetes client to avoid conflicts with Intellij.
    exclude group:"org.slf4j", module:"slf4j-simple"
    exclude group:"org.slf4j", module:"slf4j-api"
}

tasks.withType(JavaCompile) {
    options.deprecation = true
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version = '2021.2.3'
    type = 'PY'
    plugins = ['PythonCore:212.5457.59']
}

patchPluginXml {
    changeNotes = """
      Initial release.<br>
      <em>Python debugging of Kubernetes pods</em>"""
}

test {
    useJUnitPlatform()
}

jar {
    processResources.exclude("pydev_tunnel/.idea", "pydev_tunnel/__pycache__", "pydev_tunnel/build.sh")
}

configurations.archives.artifacts.clear()
artifacts {
    add("archives", shadowJar)
}

signPlugin {

    password = System.getenv("PRIVATE_KEY_PASSWORD")
    certificateChain = new Scanner(new File(System.getenv("CERTIFICATE_CHAIN").toString())).useDelimiter("\\Z").next()
    privateKey = new Scanner(new File(System.getenv("PRIVATE_KEY").toString())).useDelimiter("\\Z").next()
}

publishPlugin {
    token = System.getenv("PUBLISH_TOKEN")
    channels = ['beta']
}
